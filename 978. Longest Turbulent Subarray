#Dynamic Programming Approach

class Solution:
    def maxTurbulenceSize(self, A: List[int]) -> int:
        maxlen = min(1,len(A))
        dp=[[1 for _ in range(2)]for _ in range(len(A))]
        for i in range(1,len(A)):
            if A[i-1]<A[i]:
                dp[i][0]=dp[i-1][1]+1
            elif A[i-1]>A[i]:
                dp[i][1]=dp[i-1][0]+1
            maxlen= max(maxlen,dp[i][0],dp[i][1])
        return maxlen
